{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","settings","ignoreUndefinedProperties","firebaseInstance","authService","auth","dbService","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","dotenv","config","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","ok","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","fileInput","useRef","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","for","faPlus","backgroundImage","current","faTimes","Home","tweets","setTweets","useEffect","orderBy","onSnapshot","snapshot","tweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","getMyTweets","where","get","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9607f275.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n//이미지 첨부 없이 텍스트만 tweet했을 때, 오류나서 아래 두 줄의 코드 첨부함\nconst firestore = firebase.firestore();\nfirestore.settings({ ignoreUndefinedProperties: true });\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"EMAIL\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Log In \"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Log In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport dotenv from \"dotenv\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\ndotenv.config();\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n    console.log(ok);\n    if (ok) {\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\n      if (tweetObj.attachmentUrl !== \"\") {\n        await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n      }\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(tweetObj, newTweet);\n    await dbService.doc(`tweets/${tweetObj.id}`).update({ text: newTweet });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewTweet(value);\n  };\n  return (\n    <div className=\"tweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container tweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your tweet\"\n                  value={newTweet}\n                  required\n                  onChange={onChange}\n                  autoFocus\n                  className=\"formInput\"\n                ></input>\n                <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n          {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\n\n          {isOwner && (\n            <div className=\"tweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({ userObj }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (tweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl;\n\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"tweets\").add(tweetObj);\n    setTweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const fileInput = useRef();\n\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n    fileInput.current.value = null;\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={tweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input\n          id=\"attach-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          style={{\n            opacity: 0,\n          }}\n          ref={fileInput}\n        />\n        <input type=\"submit\" value=\"tweet\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default TweetFactory;\n","import Tweet from \"components/Tweet\";\nimport TweetFactory from \"components/TweetFactory\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"tweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const tweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setTweets(tweetArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({ refreshUser, userObj }) => {\n  let history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n    // window.location.replace(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  const getMyTweets = async () => {\n    const tweets = await dbService\n      .collection(\"tweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    console.log(tweets.docs.map((doc) => doc.data()));\n  };\n  useEffect(() => {\n    getMyTweets();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        if (user.displayName == null) {\n          setUserObj({\n            displayName: \"Anonymous\",\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n          });\n        }\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}